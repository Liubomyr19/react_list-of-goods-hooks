{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","SORT_FIELD_LENGTH","SORT_FIELD_ALPH","App","useState","sortField","setSortField","isReversed","setIsReversed","sortedGoods","goods","preparedGoods","sort","a","b","length","localeCompare","reverse","getPreparedGoods","shouldReset","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"uPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAoB,SACpBC,EAAkB,iBA+BjB,IAAMC,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA3BR,SACEC,EADF,GAGG,IADCL,EACF,EADEA,UAAWE,EACb,EADaA,WAEPI,EAAa,YAAOD,GAiB1B,OAfIL,GACFM,EAAcC,MAAK,SAACC,EAAGC,GACrB,OAAQT,GACN,KAAKH,EACH,OAAOW,EAAEE,OAASD,EAAEC,OAEtB,KAAKd,EACH,OAAOY,EAAEG,cAAcF,GAEzB,QACE,OAAO,MAKRP,EAAaI,EAAcM,UAAYN,EAM1BO,CAAiBlB,EAAiB,CACpDK,YACAE,eAGIY,EAAcZ,GAAcF,EAElC,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYjB,IAAcJ,IAE5BsB,QAAS,kBAAMjB,EAAaL,IAL9B,iCAUA,wBACEoB,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYjB,IAAcH,IAE5BqB,QAAS,kBAAMjB,EAAaJ,IAL9B,4BAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CAAE,YAAaf,IAClDgB,QAAS,kBAAMf,GAAeD,IAHhC,qBAQCY,GACC,wBACEE,KAAK,SACLD,UAAWE,IAAG,SAAU,YAAa,YACrCC,QAAS,WACPjB,EAAa,IACbE,GAAc,IALlB,sBAaJ,6BACGC,EAAYe,KAAI,SAACC,GAAD,OACf,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCxGnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ed33cfa9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_LENGTH = 'length';\nconst SORT_FIELD_ALPH = 'alphabetically';\n\ninterface SortParams {\n  sortField: string;\n  isReversed: boolean;\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  { sortField, isReversed }: SortParams,\n) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((a, b) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPH:\n          return a.length - b.length;\n\n        case SORT_FIELD_LENGTH:\n          return a.localeCompare(b);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return isReversed ? preparedGoods.reverse() : preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const sortedGoods = getPreparedGoods(goodsFromServer, {\n    sortField,\n    isReversed,\n  });\n\n  const shouldReset = isReversed || sortField;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SORT_FIELD_ALPH,\n          })}\n          onClick={() => setSortField(SORT_FIELD_ALPH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', { 'is-light': !isReversed })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {shouldReset && (\n          <button\n            type=\"button\"\n            className={cn('button', 'is-danger', 'is-light')}\n            onClick={() => {\n              setSortField('');\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map((good) => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}